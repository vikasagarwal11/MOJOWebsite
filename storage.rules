rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // Helpers
    function isSignedIn() { return request.auth != null; }
    // Reads the caller's user doc to check role (incurs a Firestore read)
    function isAdmin() {
      return isSignedIn() &&
        firestore.get(/databases/(default)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    function isImage() {
      return request.resource.contentType.matches('image/.*')
        || request.resource.name.matches('.*\\.(jpg|jpeg|png|gif|webp)$');
    }
    
    // =========================
    // User media uploads: media/{uid}/...
    // =========================
    match /media/{userId}/{allPaths=**} {
      allow read: if true; // or isSignedIn() if you prefer private reads
      allow write: if request.auth != null
                   && (request.auth.uid == userId || isAdmin())
                   && request.resource.size < 50 * 1024 * 1024 // < 50MB
                   && (request.resource.contentType.matches('image/.*')
                       || request.resource.contentType.matches('video/.*')
                       || request.resource.contentType.matches('audio/.*'));
    }
    
    // =========================
    // Profile pictures: profiles/{uid}/{fileName}
    // =========================
    match /profiles/{userId}/{fileName} {
      allow read: if true;
      allow write: if isSignedIn()
                   && request.auth.uid == userId
                   && request.resource.size < 5 * 1024 * 1024 // < 5MB
                   && isImage();
    }
    
    // =========================
    // Event images (admins only): events/{...}
    // =========================
    match /events/{fileName=**} {
      allow read: if true;
      allow write: if isAdmin()
                   && request.resource.size < 10 * 1024 * 1024 // < 10MB
                   && isImage();
    }
    
    // =========================
    // Sponsor logos (admins only): sponsors/{...}
    // =========================
    match /sponsors/{fileName=**} {
      allow read: if true;
      allow write: if isAdmin()
                   && request.resource.size < 5 * 1024 * 1024 // < 5MB
                   && isImage();
    }
    
    // Fallback: deny anything not matched above
    match /{path=**} {
      allow read, write: if false;
    }
  }
}
